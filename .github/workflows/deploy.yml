name: Deploy to GitHub pages

on:
  push:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
  
      - name: Add tokens
        shell: sh
        run: sed -i "s/{MAPTILER_API_KEY}/${{ secrets.MAPTILER_API_KEY }}/g" src/environments/environment.ts
      
      - name: Setup Node JS
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          
      - name: Build application
        run: |
          npm install
          npm run build
  
      - name: Archive artifact
        shell: sh
        run: |
          echo ::group::Archive artifact
          tar \
            --dereference --hard-dereference \
            --directory "dist/project-w/browser" \
            -cvf "$RUNNER_TEMP/artifact.tar" \
            .
          echo ::endgroup::

      - name: Configure Pages
        uses: actions/configure-pages@v4
  
      - name: Upload artifact
        uses: actions/artifact@v4
        with:
          path: ${{ runner.temp }}/artifact.tar
          if-no-files-found: error

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
